[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.4.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.4.0", features = [ "updater", "fs-rename-file", "system-tray", "http-request", "process-relaunch", "fs-create-dir", "fs-read-file", "fs-write-file", "fs-exists", "path-all", "fs-copy-file", "fs-read-dir", "shell-open", "window-set-focus", "window-start-dragging", "window-close", "window-hide", "window-show", "window-minimize"] }
sysinfo = "0.29.3"
lazy_static = "1.4.0"
tauri-plugin-fs-watch = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-autostart = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
zip = { version = "0.6.6", default-features = false, features = ["deflate"] }
chrono = "0.4.26"
os_pipe = "1.1.4"
ring = "0.16.20"
data-encoding = "2.4.0"
thiserror = "1.0.43"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
